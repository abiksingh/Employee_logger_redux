{"ast":null,"code":"var _jsxFileName = \"/Users/abhisheksingh/Desktop/it-logger/src/components/logs/Logs.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from '../logs/LogItem';\nimport Preloader from '../layouts/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  // const [logs, setLogs] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line  \n  }, []);\n\n  if (loading || logs === null) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"System Logs\")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"No logs to Show...\") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["/Users/abhisheksingh/Desktop/it-logger/src/components/logs/Logs.js"],"names":["React","useEffect","connect","LogItem","Preloader","PropTypes","getLogs","Logs","log","logs","loading","length","map","id","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAG,EAAC;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAL;AAAqBJ,EAAAA;AAArB,CAAD,KAAmC;AAE5C;AACA;AAGAL,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,OAAO,GADG,CAEZ;AACD,GAHQ,EAGP,EAHO,CAAT;;AAMA,MAAGI,OAAO,IAAID,IAAI,KAAK,IAAvB,EAA4B;AACxB,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,EAIK,CAACC,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,GAAiC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAjC,GAAkFF,IAAI,CAACG,GAAL,CAASJ,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAJvF,CADJ;AAQH,CAxBD;;AA0BAN,IAAI,CAACO,SAAL,GAAiB;AACbN,EAAAA,GAAG,EAAEH,SAAS,CAACU,MAAV,CAAiBC;AADT,CAAjB;;AAIA,MAAMC,eAAe,GAAGC,KAAD,KAAW;AAC9BV,EAAAA,GAAG,EAAEU,KAAK,CAACV;AADmB,CAAX,CAAvB;;AAIA,eAAeN,OAAO,CAACe,eAAD,EAAiB;AAACX,EAAAA;AAAD,CAAjB,CAAP,CAAmCC,IAAnC,CAAf","sourcesContent":["import React,{useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport LogItem from '../logs/LogItem';\nimport Preloader from '../layouts/Preloader';\nimport PropTypes from 'prop-types';\nimport {getLogs} from '../../actions/logActions';\n\n\nconst Logs = ({log:{logs,loading}, getLogs}) => {\n\n    // const [logs, setLogs] = useState([]);\n    // const [loading, setLoading] = useState(false);\n\n\n    useEffect(()=>{\n        getLogs();\n      // eslint-disable-next-line  \n    },[])\n\n    \n    if(loading || logs === null){\n        return <Preloader />\n    }\n\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className=\"center\">System Logs</h4>\n            </li>\n            {!loading && logs.length === 0 ? (<p className=\"center\">No logs to Show...</p>) : (logs.map(log => <LogItem log={log} key={log.id} />)) }\n        </ul>\n    )\n}\n\nLogs.propTypes = {\n    log: PropTypes.object.isRequired\n}\n\nconst mapStateToProps =(state)=> ({\n    log: state.log\n})\n\nexport default connect(mapStateToProps,{getLogs})(Logs)\n"]},"metadata":{},"sourceType":"module"}