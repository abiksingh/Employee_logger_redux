{"ast":null,"code":"var _jsxFileName = \"/Users/abhisheksingh/Desktop/it-logger/src/components/techs/TechSelectOptions.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../actions/techActions';\n\nconst TechSelectOptions = ({\n  getTechs,\n  tech: {\n    techs,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getTechs(); // eslint-disable-next-line\n  }, []);\n  return !loading && techs !== null && techs.map(t => React.createElement(\"option\", {\n    key: t.id,\n    value: \"\".concat(t.firstName, \" \").concat(t.lastName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, t.firstName, \" \", t.lastName));\n};\n\nTechSelectOptions.propTypes = {\n  getTechs: PropTypes.func.isRequired,\n  tech: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, {\n  getTechs\n})(TechSelectOptions);","map":{"version":3,"sources":["/Users/abhisheksingh/Desktop/it-logger/src/components/techs/TechSelectOptions.js"],"names":["React","useEffect","connect","PropTypes","getTechs","TechSelectOptions","tech","techs","loading","map","t","id","firstName","lastName","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,2BAAvB;;AAGA,MAAMC,iBAAiB,GAAG,CAAC;AAACD,EAAAA,QAAD;AAAWE,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAhB,CAAD,KAAuC;AAE7DP,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,QAAQ,GADE,CAEV;AACH,GAHQ,EAGP,EAHO,CAAT;AAOA,SAEI,CAACI,OAAD,IAAYD,KAAK,KAAK,IAAtB,IAA8BA,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAG;AAAQ,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAf;AAAmB,IAAA,KAAK,YAAKD,CAAC,CAACE,SAAP,cAAoBF,CAAC,CAACG,QAAtB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvCH,CAAC,CAACE,SADqC,OACzBF,CAAC,CAACG,QADuB,CAAd,CAFlC;AAOH,CAhBD;;AAkBAR,iBAAiB,CAACS,SAAlB,GAA8B;AAC9BV,EAAAA,QAAQ,EAAED,SAAS,CAACY,IAAV,CAAeC,UADK;AAE9BV,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAAV,CAAiBD;AAFO,CAA9B;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAW;AAC/Bb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADmB,CAAX,CAAxB;;AAIA,eAAeJ,OAAO,CAACgB,eAAD,EAAiB;AAACd,EAAAA;AAAD,CAAjB,CAAP,CAAoCC,iBAApC,CAAf","sourcesContent":["import React,{useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getTechs} from '../../actions/techActions';\n\n\nconst TechSelectOptions = ({getTechs, tech:{techs, loading}}) => {\n\n    useEffect(()=>{\n        getTechs();\n        // eslint-disable-next-line\n    },[])\n\n\n\n    return (\n        \n        !loading && techs !== null && techs.map(t=>(<option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n            {t.firstName} {t.lastName}\n        </option>))\n        \n    )\n};\n\nTechSelectOptions.propTypes = {\ngetTechs: PropTypes.func.isRequired,\ntech: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) =>({\n    tech: state.tech\n})\n\nexport default connect(mapStateToProps,{getTechs})(TechSelectOptions);\n"]},"metadata":{},"sourceType":"module"}