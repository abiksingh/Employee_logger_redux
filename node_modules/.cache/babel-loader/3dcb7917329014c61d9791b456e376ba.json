{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from './types'; // export const getLogs = ()=>{\n//     return async (dispatch) => {\n//         setLoading();\n//         const res = await fetch('/logs');\n//         const data = await res.json();\n//         dispatch({\n//             type:GET_LOGS,\n//             payload: data\n//         })\n//     }\n// };\n//Get Logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Add new Log\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Delete Logs from server\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(\"/logs/\".concat(id), {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Update Log on Server\n\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/logs/\".concat(log.id), {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Search Logs\n\nexport const searchLogs = text => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/logs?q=\".concat(text));\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //Set Currrent Log\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; //Clear Currrent Log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; //Set Loading to True\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/abhisheksingh/Desktop/it-logger/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SEARCH_LOGS","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addLog","log","method","body","JSON","stringify","headers","deleteLog","id","updateLog","searchLogs","text","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["import {\nGET_LOGS,\nSET_LOADING,\nLOGS_ERROR,\nADD_LOG,\nDELETE_LOG,\nSET_CURRENT,\nCLEAR_CURRENT,\nUPDATE_LOG,\nSEARCH_LOGS\n} from './types';\n\n\n// export const getLogs = ()=>{\n\n//     return async (dispatch) => {\n\n//         setLoading();\n\n//         const res = await fetch('/logs');\n//         const data = await res.json();\n\n//         dispatch({\n//             type:GET_LOGS,\n//             payload: data\n//         })\n\n//     }\n\n// };\n\n\n\n\n//Get Logs from server\nexport const getLogs = () => async (dispatch) => {\n\n    try {\n        \n        setLoading();\n\n        const res = await fetch('/logs');\n        const data = await res.json();\n\n        dispatch({\n            type:GET_LOGS,\n            payload: data\n        })\n\n    } catch (err) {\n        \n        dispatch({\n            type:LOGS_ERROR,\n            payload: err.response.data\n        })\n\n\n    }\n  };\n\n\n\n\n\n  //Add new Log\nexport const addLog = (log) => async (dispatch) => {\n\n    try {\n        \n        setLoading();\n\n        const res = await fetch('/logs',{\n            method: 'POST',\n            body: JSON.stringify(log),\n            headers: {\n                'Content-type': 'application/json'\n            }\n        });\n        const data = await res.json();\n\n        dispatch({\n            type: ADD_LOG,\n            payload: data\n        })\n\n    } catch (err) {\n        \n        dispatch({\n            type:LOGS_ERROR,\n            payload: err.response.data\n        })\n\n\n    }\n  };\n\n\n//Delete Logs from server\n\n\n  export const deleteLog = (id) => async (dispatch) => {\n\n    try {\n        \n        setLoading();\n\n         await fetch(`/logs/${id}`,{\n            method: 'DELETE'\n        });\n   \n        dispatch({\n            type:DELETE_LOG,\n            payload: id\n        })\n\n    } catch (err) {\n        \n        dispatch({\n            type:LOGS_ERROR,\n            payload: err.response.data\n        })\n\n\n    }\n  };\n\n\n\n  //Update Log on Server\n\nexport const updateLog = (log) => async (dispatch) => {\n\n    try {\n        \n        setLoading();\n\n            const res = await fetch(`/logs/${log.id}`,{\n            method: 'PUT',\n            body: JSON.stringify(log),\n            headers: {\n                'Content-type': 'application/json'\n            }\n\n\n        });\n\n        const data = await res.json();\n   \n        dispatch({\n            type: UPDATE_LOG,\n            payload: data\n        })\n\n    } catch (err) {\n        \n        dispatch({\n            type:LOGS_ERROR,\n            payload: err.response.data\n        })\n\n\n    }\n  };\n\n\n  //Search Logs\n\n  export const searchLogs = (text) => async (dispatch) => {\n\n    try {\n        \n        setLoading();\n\n        const res = await fetch(`/logs?q=${text}`);\n        const data = await res.json();\n\n        dispatch({\n            type: SEARCH_LOGS,\n            payload: data\n        })\n\n    } catch (err) {\n        \n        dispatch({\n            type:LOGS_ERROR,\n            payload: err.response.data\n        })\n\n\n    }\n  };\n\n\n\n\n  //Set Currrent Log\n  export const setCurrent = (log) => {\n      return {\n          type: SET_CURRENT,\n          payload: log\n      }\n  };\n\n\n   //Clear Currrent Log\n   export const clearCurrent = () => {\n    return {\n        type: CLEAR_CURRENT\n        \n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n//Set Loading to True\n \nexport const setLoading=()=>{\n    return{\n        type:SET_LOADING\n    }\n};"]},"metadata":{},"sourceType":"module"}