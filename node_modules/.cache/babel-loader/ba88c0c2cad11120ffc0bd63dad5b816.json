{"ast":null,"code":"import _slicedToArray from \"/Users/abhisheksingh/Desktop/it-logger/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/abhisheksingh/Desktop/it-logger/src/components/logs/EditLogModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { updateLog } from '../../actions/logActions';\n\nconst EditLogModal = ({\n  updateLog,\n  current\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        attention = _useState4[0],\n        setAttention = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tech = _useState6[0],\n        setTech = _useState6[1];\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({\n        html: 'Please enter a message and tech'\n      });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n      updateLog(updLog); //Clear Fields\n\n      setMessage('');\n      setAttention(false);\n      setTech('');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"edit-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Enter System Log\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"tech\",\n    value: tech,\n    className: \"browser-default\",\n    onChange: e => setTech(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Select Technician\"), React.createElement(\"option\", {\n    value: \"John Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"John Doe\"), React.createElement(\"option\", {\n    value: \"Sid Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Sid Doe\"), React.createElement(\"option\", {\n    value: \"Tony Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Tony Doe\")))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Need Attention\")))))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onSubmit,\n    className: \"modal-close waves-effect blue waves-light btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Enter\")));\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(mapStateToProps, {\n  updateLog\n})(EditLogModal);","map":{"version":3,"sources":["/Users/abhisheksingh/Desktop/it-logger/src/components/logs/EditLogModal.js"],"names":["React","useState","useEffect","connect","PropTypes","M","updateLog","EditLogModal","current","message","setMessage","attention","setAttention","tech","setTech","onSubmit","toast","html","updLog","id","date","Date","modalStyle","e","target","value","width","height","propTypes","object","func","isRequired","mapStateToProps","state","log"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport {updateLog} from '../../actions/logActions';\n\nconst EditLogModal = ({updateLog, current}) => {\n\n    const [message, setMessage] = useState('');\n    const [attention, setAttention] =useState(false);\n    const [tech, setTech] =useState('');\n\n\n    useEffect(()=>{\n        if(current){\n            setMessage(current.message);\n            setAttention(current.attention);\n            setTech(current.tech);\n\n        }\n    },[current])\n\n    const onSubmit = ()=>{\n        if(message === '' || tech === ''){\n            M.toast({html: 'Please enter a message and tech'})\n        }else{\n            const updLog = {\n                id: current.id,\n                message,\n                attention,\n                tech,\n                date: new Date()\n            }\n\n            updateLog(updLog);\n\n             //Clear Fields\n             setMessage('');\n             setAttention(false);\n             setTech('')\n        }\n        \n    }\n\n    return (\n        <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n            <div className=\"modal-content\">\n                <h4>Enter System Log</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"message\" value={message} onChange={e => setMessage(e.target.value)}/>\n                        {/* <label htmlFor=\"message\" className=\"active\">Log Message</label> */}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <select name=\"tech\" value={tech} className=\"browser-default\" onChange={e => setTech(e.target.value)}>\n                            <option value=\"\" disabled>Select Technician</option>\n                            <option value=\"John Doe\">John Doe</option>\n                            <option value=\"Sid Doe\">Sid Doe</option>\n                            <option value=\"Tony Doe\">Tony Doe</option>\n\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <p>\n                            <label>\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)}/>\n                                <span>Need Attention</span>\n                            </label>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect blue waves-light btn\">Enter</a>\n            </div>\n        </div>\n    )\n}\n\nconst modalStyle = {\n    width: '75%',\n    height: '75%'\n};\n\nEditLogModal.propTypes = {\n    current: PropTypes.object,\n    updateLog: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state)=> ({\n    current: state.log.current\n})\n\nexport default connect(mapStateToProps,{updateLog})(EditLogModal)\n"]},"metadata":{},"sourceType":"module"}