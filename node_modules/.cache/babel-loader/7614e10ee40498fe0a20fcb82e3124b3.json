{"ast":null,"code":"import _defineProperty from \"/Users/abhisheksingh/Desktop/it-logger/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR } from '../actions/types';\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/abhisheksingh/Desktop/it-logger/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","initialState","logs","current","loading","error","state","action","type"],"mappings":";;;;;;AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,UAHJ,QAIW,kBAJX;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,OAAO,EAAG,IAFO;AAGjBC,EAAAA,OAAO,EAAG,KAHO;AAIjBC,EAAAA,KAAK,EAAG;AAJS,CAArB;AAUA,gBAAe,CAACC,KAAK,GAAEL,YAAR,EAAsBM,MAAtB,KAAgC;AAC3C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKT,WAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,OAAO,EAAC;AAFZ;;AAKJ;AACI,aAAOE,KAAP;AATR;AAWH,CAZD","sourcesContent":["import {\n    GET_LOGS,\n    SET_LOADING,\n    LOGS_ERROR\n    } from '../actions/types';\n    \n\n\n\nconst initialState = {\n    logs :null,\n    current : null,\n    loading : false,\n    error : null\n};\n\n\n\n\nexport default (state= initialState, action) =>{\n    switch(action.type) {\n\n        case SET_LOADING:\n            return {\n                ...state,\n                loading:true\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}